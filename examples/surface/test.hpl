let id : [a :: *3]. a -> a =
    \x => x;

let n : Int -> Int = id (\x => x);

let const : [a :: *3, b :: *3]. a -> b -> a =
    (\x y => x);

let composeN : [a :: *1]. Int -> (a -> a) -> a -> a =
    \m f =>
        let rec go : Int -> a -> a =
            \n x => if n >= 0
                then go (n - 1) (f x)
                else x;
        go m
    ;